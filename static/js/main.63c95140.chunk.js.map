{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DateTime","props","className","date","DateTimePrettified","displayDate","Date","replace","now","hourMs","dayMs","Math","ceil","Video","src","url","frameBorder","allow","allowFullScreen","title","VideoList","list","map","item","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAEA,SAASA,EAASC,GAChB,OACE,mBAAGC,UAAU,OAAb,SAAqBD,EAAME,OAwB/B,IAAMC,EAnBuB,SAACH,GAC1B,IAEII,EAFEF,EAAO,IAAIG,KAAKL,EAAME,KAAKI,QAAQ,IAAK,MACxCC,EAAM,IAAIF,KAGVG,EAAS,KACTC,EAAQ,MAOd,OALIF,EAAML,EAAO,GAAKO,IAAOL,EAAcJ,EAAME,MAC7CK,EAAML,EAAOO,GAASF,EAAML,EAAO,GAAKO,IAAOL,EAAW,UAAMM,KAAKC,MAAMJ,EAAML,GAAQO,GAA/B,6DAC1DF,EAAML,EAAOO,IAAOL,EAAW,UAAMM,KAAKC,MAAMJ,EAAML,GAAQM,GAA/B,mEAC/BD,EAAML,EAAOM,IAAQJ,EAAW,UAAMM,KAAKC,MAAMJ,EAAML,GAAQ,GAAK,KAApC,mEAE7B,cAACH,EAAD,CAAUG,KAAME,KAQ3B,SAASQ,EAAMZ,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQY,IAAKb,EAAMc,IAAKC,YAAY,IAAIC,MAAM,4BAA4BC,iBAAe,EAACC,MAAOlB,EAAMc,MACvG,cAAC,EAAD,CAAoBZ,KAAMF,EAAME,UAKtC,SAASiB,EAAUnB,GACjB,OAAOA,EAAMoB,KAAKC,KAAI,SAAAC,GAAI,OAAI,cAACV,EAAD,CAAOE,IAAKQ,EAAKR,IAAKZ,KAAMoB,EAAKpB,MAAWoB,EAAKR,QAGlE,SAASS,IAAO,IAAD,EACbC,mBAAS,CACtB,CACEV,IAAK,gFACLZ,KAAM,uBAER,CACEY,IAAK,gFACLZ,KAAM,uBAER,CACEY,IAAK,gFACLZ,KAAM,uBAER,CACEY,IAAK,gFACLZ,KAAM,uBAER,CACEY,IAAK,gFACLZ,KAAM,uBAER,CACEY,IAAK,gFACLZ,KAAM,yBAvBHkB,EADqB,oBA4B5B,OACE,cAACD,EAAD,CAAWC,KAAMA,ICxErB,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.63c95140.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction DateTime(props) {\n  return (\n    <p className=\"date\">{props.date}</p>\n  )\n}\n\nfunction DateTimePretty(DateTimeComponent) {\n  const DateTimePrettified = (props) => {\n    const date = new Date(props.date.replace(' ', 'T'));\n    const now = new Date();\n    let displayDate;\n\n    const hourMs = 60 * 60 * 1000;\n    const dayMs = 24 * hourMs;\n\n    if (now - date > 30 * dayMs) displayDate = props.date;\n    if (now - date > dayMs && now - date < 30 * dayMs) displayDate = `${Math.ceil((now - date) / dayMs)} дней назад`;\n    if (now - date < dayMs) displayDate = `${Math.ceil((now - date) / hourMs)} часов назад`;\n    if (now - date < hourMs) displayDate = `${Math.ceil((now - date) / 60 * 1000)} минут назад`;\n\n    return <DateTime date={displayDate} />\n  }\n\n  return DateTimePrettified;\n}\n\nconst DateTimePrettified = DateTimePretty(DateTime);\n\nfunction Video(props) {\n  return (\n    <div className=\"video\">\n      <iframe src={props.url} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen title={props.url}></iframe>\n      <DateTimePrettified date={props.date} />\n    </div>\n  )\n}\n\nfunction VideoList(props) {\n  return props.list.map(item => <Video url={item.url} date={item.date} key={item.url} />);\n}\n\nexport default function App() {\n  const [list] = useState([\n    {\n      url: 'https://www.youtube.com/embed/rN6nlNC9WQA?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2021-03-03 22:22:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/dVkK36KOcqs?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2021-03-02 00:10:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/xGRjCa49C6U?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2021-02-12 23:16:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/RK1K2bCg4J8?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2018-01-03 12:10:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/TKmGU77INaM?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2018-01-01 16:17:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/TxbE79-1OSI?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2017-12-02 05:24:00'\n    },\n  ]);\n\n  return (\n    <VideoList list={list} />\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}